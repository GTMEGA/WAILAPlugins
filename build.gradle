buildscript {
    repositories {
        mavenCentral()
        maven { // minecraftforge, gregtech...
            name = "gt"
            url = "https://gregtech.overminddl1.com/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "jitpack.io"
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath 'com.github.GTNewHorizons:ForgeGradle:1.2.4'
    }
}

plugins {
    id 'java'
    id 'java-library'
    id 'idea'
    id "de.undercouch.download" version "4.1.1"
    id "io.freefair.lombok" version "6.0.0-m2"
}

apply plugin: 'forge'
apply plugin: 'signing'

file "gradle.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    options.encoding = "UTF-8"
}

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "run"
}

idea.module.inheritOutputDirs = true

group = 'tterrag.wailaplugins'
archivesBaseName = "WAILAPlugins"
version = "MC${minecraft_version}-${mod_version}-${System.getenv().BUILD_NUMBER}"

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = 'run'

    replace "@VERSION@", project.version
    replace "${toReplace}", "required-after:endercore@[${endercore_version},);required-after:Waila;"
    replaceIn "WailaPlugins.java"
}

repositories {
    maven {
        name = "gt"
        url = "https://gregtech.overminddl1.com/"
    }
    maven { // ttCore
        name = 'tterrag Repo'
        url = "https://maven.tterrag.com/"
    }
    maven { // WAILA
        name = "Mobius Repo"
        url = "http://mobiusstrip.eu/maven"
    }
    maven { // CCC/NEI (for WAILA)
        name = 'CB Repo'
        url = "https://chickenbones.net/maven/"
    }
    maven { // Forestry
        name = 'Player Maven'
        url = "https://maven.ic2.player.to"
    }
    maven {
        name = "chickenbones"
        url = "https://chickenbones.net/maven/"
    }
    maven {
        name = "ic2, forestry"
        url = "https://maven.ic2.player.to/"
    }
    maven { // EnderIO & EnderCore
        name = 'tterrag Repo'
        url = "https://maven.tterrag.com"
    }
    maven { // TConstruct
        name = 'DVS1 Maven FS'
        url = 'https://dvs1.progwml6.com/files/maven'
    }
    maven { // AppleCore
        url = "https://www.ryanliptak.com/maven/"
    }
    maven { // GalacticGreg, YAMCore,..
        name = 'UsrvDE'
        url = "http://jenkins.usrv.eu:8081/nexus/content/repositories/releases/"
    }
    ivy { // ResourcefulCrops
        name = 'GTNH_Mods_for_Jenkins'
        artifactPattern("http://downloads.gtnewhorizons.com/Mods_for_Jenkins/[organisation]/[module]/[revision]/[module]-[revision].[ext]")
    }
}

dependencies {
    compile "com.enderio.core:EnderCore:${endercore_version}:dev"
    compile "mcp.mobius.waila:Waila:${WAILA_version}"
    compile "net.sengir.forestry:forestry_1.7.10:${forestry_version}:dev"
    compile "resourcefulcrops:ResourcefulCrops:${rcrops_version}:deobf"
	compile "com.github.GTNewHorizons:StructureLib:${config.structurelib.version}:deobf"
}


processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

jar {

}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier.set('sources')
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    archiveClassifier.set('deobf')
}

task downloadGregTech(type: Download) {
    src "http://jenkins.usrv.eu:8080/job/Gregtech-5-Unofficial/${gregtech_jenkinsbuild}/artifact/build/libs/gregtech-${gregtech_version}-dev.jar"
    dest new File(buildDir, "gregtech-${gregtech_version}-dev.jar")
    overwrite false
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}

task downloadIC2(type: Download) {
    src "http://jenkins.ic2.player.to/job/IC2_experimental/${ic2_jenkinsbuild}/artifact/build/libs/industrialcraft-${ic2_version}-dev.jar"
    dest new File(buildDir, "industrialcraft-${ic2_version}-dev.jar")
    overwrite false
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}

task downloadLibs(dependsOn: [downloadGregTech, downloadIC2], type: Copy) {
    into file('libs')

    from downloadGregTech.dest
    into file('libs')

    from downloadIC2.dest
    into file('libs')
}

tasks.build.dependsOn sourceJar, deobfJar
tasks.sourceMainJava.dependsOn downloadLibs
tasks.eclipse.dependsOn downloadLibs
tasks.idea.dependsOn downloadLibs